{"trial_id": "01", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "kernel_1", "default": null, "conditions": [], "min_value": 4, "max_value": 10, "step": 2, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "kernel_size_1", "default": null, "conditions": [], "min_value": 3, "max_value": 11, "step": 2, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.01, "conditions": [], "values": [0.01, 0.001, 0.0001], "ordered": true}}], "values": {"kernel_1": 8, "kernel_size_1": 11, "learning_rate": 0.001}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/opt/homebrew/lib/python3.11/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/opt/homebrew/lib/python3.11/site-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 232, in _build_and_fit_model\n    model = self._try_build(hp)\n            ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 164, in _try_build\n    model = self._build_hypermodel(hp)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/homebrew/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 155, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/folders/3t/9pfjmtv5277d5j2y93gvpb6m0000gn/T/ipykernel_51464/2897320398.py\", line 29, in build_model\n    model.add(Conv2D(hp_kernel_1, (hp_kernel_size_2, hp_kernel_size_2), activation='relu', input_shape=(28, 28, 1)))\n  File \"/opt/homebrew/lib/python3.11/site-packages/keras/src/models/sequential.py\", line 116, in add\n    self._maybe_rebuild()\n  File \"/opt/homebrew/lib/python3.11/site-packages/keras/src/models/sequential.py\", line 135, in _maybe_rebuild\n    self.build(input_shape)\n  File \"/opt/homebrew/lib/python3.11/site-packages/keras/src/layers/layer.py\", line 223, in build_wrapper\n    original_build_method(*args, **kwargs)\n  File \"/opt/homebrew/lib/python3.11/site-packages/keras/src/models/sequential.py\", line 176, in build\n    x = layer(x)\n        ^^^^^^^^\n  File \"/opt/homebrew/lib/python3.11/site-packages/keras/src/utils/traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/opt/homebrew/lib/python3.11/site-packages/keras/src/ops/operation_utils.py\", line 221, in compute_conv_output_shape\n    raise ValueError(\nValueError: Computed output size would be negative. Received `inputs shape=(None, 9, 9, 8)`, `kernel shape=(11, 11, 8, 8)`, `dilation_rate=[1 1]`.\n"}